import java.util.*;
import java.io.*;
class Main{
    static Node root1,root2;
    static class Node
    {
        int data;
        Node left;
        Node right;
        Node(int d)
        {
            data=d;
            left=right=null;
        }
    }
    static void inorder(Node temp)
    {
        if(temp!=null)
        {
            inorder(temp.left);
            System.out.print(temp.data+" ");
            inorder(temp.right);
        }
    }
    static boolean checkmirrorimage(Node temp1,Node temp2)
    {
        if(temp1==null && temp2==null)
            return true;
        if(temp1== null || temp2==null)
            return false;
        if(temp1.data==temp2.data)
            return (checkmirrorimage(temp1.left,temp2.right) && checkmirrorimage(temp1.right,temp2.left));
        else
            return false;
    }
public static void main(String args[])
    {
        root1=new Node(4);
        root1.left=new Node(2);
        root1.right=new Node(6);
        root1.left.left=new Node(1);
        root1.left.right=new Node(3);
        root1.right.left=new Node(5);
        root1.right.right=new Node(7);
        root2=new Node(4);
        root2.left=new Node(6);
        root2.right=new Node(2);
        root2.left.left=new Node(7);
        root2.left.right=new Node(5);
        root2.right.left=new Node(3);
        root2.right.right=new Node(1);
        System.out.println("inorder of 1st tree");
        inorder(root1);
        System.out.println();
        System.out.println("inorder of 2nd tree");
        inorder(root2);
        System.out.println();
        System.out.println("check mirror image");
        boolean result=checkmirrorimage(root1,root2);
        System.out.println("trees are the mirror image of each other is "+result);
    }
}
